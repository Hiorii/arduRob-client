{"ast":null,"code":"import _regeneratorRuntime from\"/home/hiorii/Desktop/arduRob/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/hiorii/Desktop/arduRob/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useContext}from'react';import{useDispatch}from'react-redux';import{useHistory}from'react-router-dom';import{signInWithGoogle}from'../../../../redux/userRedux';import{AlertContext}from'../../../../context/alertContext';import styles from'./Login.module.scss';import{GoogleLogin}from'react-google-login';import{AiFillGoogleCircle}from'react-icons/ai';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=function Login(_ref){var handleChange=_ref.handleChange;var history=useHistory();var dispatch=useDispatch();var alert=useContext(AlertContext);var googleSuccess=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(res){var result,token;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:result=res===null||res===void 0?void 0:res.profileObj;token=res===null||res===void 0?void 0:res.tokenId;try{dispatch(signInWithGoogle({data:{result:result,token:token}},history));}catch(err){console.log(err);}case 3:case\"end\":return _context.stop();}}},_callee);}));return function googleSuccess(_x){return _ref2.apply(this,arguments);};}();var googleFailure=function googleFailure(){alert.successAlert('Google sign in was unsuccessful. Try again later');console.log('Google sign in was unsuccessful. Try again later');};return/*#__PURE__*/_jsxs(\"div\",{className:styles.root,children:[/*#__PURE__*/_jsx(\"div\",{className:styles.googleCont,children:/*#__PURE__*/_jsx(GoogleLogin,{clientId:\"504256198169-11igqfgkufvc1703me1hoefg72mbnbf4.apps.googleusercontent.com\",render:function render(renderProps){return/*#__PURE__*/_jsxs(\"button\",{onClick:renderProps.onClick,disabled:renderProps.disabled,className:styles.googleBtn,children:[/*#__PURE__*/_jsx(AiFillGoogleCircle,{}),\"Log in with Google\",/*#__PURE__*/_jsx(AiFillGoogleCircle,{})]});},buttonText:\"Login\",onSuccess:googleSuccess,onFailure:googleFailure,cookiePolicy:\"single_host_origin\"})}),/*#__PURE__*/_jsx(\"div\",{className:styles.or,children:/*#__PURE__*/_jsx(\"fieldset\",{children:/*#__PURE__*/_jsx(\"legend\",{children:\"or\"})})}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"E-mail\"}),/*#__PURE__*/_jsx(\"input\",{id:\"email\",name:\"email\",type:\"text\",placeholder:\"E-mail\",onChange:handleChange}),/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{id:\"password\",name:\"password\",type:\"password\",placeholder:\"Password\",onChange:handleChange})]});};export default Login;","map":{"version":3,"sources":["/home/hiorii/Desktop/arduRob/client/src/components/views/Checkout/Login/Login.js"],"names":["React","useContext","useDispatch","useHistory","signInWithGoogle","AlertContext","styles","GoogleLogin","AiFillGoogleCircle","Login","handleChange","history","dispatch","alert","googleSuccess","res","result","profileObj","token","tokenId","data","err","console","log","googleFailure","successAlert","root","googleCont","renderProps","onClick","disabled","googleBtn","or"],"mappings":"iTAAA,MAAOA,CAAAA,KAAP,EAAeC,UAAf,KAAgC,OAAhC,CAEA,OAAQC,WAAR,KAA0B,aAA1B,CACA,OAAQC,UAAR,KAAyB,kBAAzB,CACA,OAAQC,gBAAR,KAA+B,6BAA/B,CACA,OAAQC,YAAR,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,OAAQC,WAAR,KAA0B,oBAA1B,CACA,OAAQC,kBAAR,KAAiC,gBAAjC,C,wFAEA,GAAMC,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,MAAoB,IAAlBC,CAAAA,YAAkB,MAAlBA,YAAkB,CAChC,GAAMC,CAAAA,OAAO,CAAGR,UAAU,EAA1B,CACA,GAAMS,CAAAA,QAAQ,CAAGV,WAAW,EAA5B,CACA,GAAMW,CAAAA,KAAK,CAAGZ,UAAU,CAACI,YAAD,CAAxB,CAEA,GAAMS,CAAAA,aAAa,2FAAG,iBAAOC,GAAP,mIACdC,MADc,CACLD,GADK,SACLA,GADK,iBACLA,GAAG,CAAEE,UADA,CAEdC,KAFc,CAENH,GAFM,SAENA,GAFM,iBAENA,GAAG,CAAEI,OAFC,CAGpB,GAAI,CACFP,QAAQ,CAACR,gBAAgB,CAAC,CAACgB,IAAI,CAAE,CAACJ,MAAM,CAANA,MAAD,CAASE,KAAK,CAALA,KAAT,CAAP,CAAD,CAA0BP,OAA1B,CAAjB,CAAR,CACD,CAAC,MAAOU,GAAP,CAAY,CACZC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACD,CAPmB,sDAAH,kBAAbP,CAAAA,aAAa,6CAAnB,CAUA,GAAMU,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAC1BX,KAAK,CAACY,YAAN,CAAmB,kDAAnB,EACAH,OAAO,CAACC,GAAR,CAAY,kDAAZ,EACD,CAHD,CAKA,mBACE,aAAK,SAAS,CAAEjB,MAAM,CAACoB,IAAvB,wBACE,YAAK,SAAS,CAAEpB,MAAM,CAACqB,UAAvB,uBACE,KAAC,WAAD,EACE,QAAQ,CAAC,0EADX,CAEE,MAAM,CAAE,gBAAAC,WAAW,qBACjB,gBAAQ,OAAO,CAAEA,WAAW,CAACC,OAA7B,CAAsC,QAAQ,CAAED,WAAW,CAACE,QAA5D,CAAsE,SAAS,CAAExB,MAAM,CAACyB,SAAxF,wBACE,KAAC,kBAAD,IADF,mCACyC,KAAC,kBAAD,IADzC,GADiB,EAFrB,CAOE,UAAU,CAAC,OAPb,CAQE,SAAS,CAAEjB,aARb,CASE,SAAS,CAAEU,aATb,CAUE,YAAY,CAAC,oBAVf,EADF,EADF,cAeE,YAAK,SAAS,CAAElB,MAAM,CAAC0B,EAAvB,uBACE,uCACE,8BADF,EADF,EAfF,cAoBE,cAAO,OAAO,CAAC,OAAf,oBApBF,cAqBE,cACE,EAAE,CAAC,OADL,CAEE,IAAI,CAAC,OAFP,CAGE,IAAI,CAAC,MAHP,CAIE,WAAW,CAAC,QAJd,CAKE,QAAQ,CAAEtB,YALZ,EArBF,cA4BE,cAAO,OAAO,CAAC,UAAf,sBA5BF,cA6BE,cACE,EAAE,CAAC,UADL,CAEE,IAAI,CAAC,UAFP,CAGE,IAAI,CAAC,UAHP,CAIE,WAAW,CAAC,UAJd,CAKE,QAAQ,CAAEA,YALZ,EA7BF,GADF,CAuCD,CA3DD,CAiEA,cAAeD,CAAAA,KAAf","sourcesContent":["import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport {useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport {signInWithGoogle} from '../../../../redux/userRedux';\nimport {AlertContext} from '../../../../context/alertContext';\nimport styles from './Login.module.scss';\nimport {GoogleLogin} from 'react-google-login';\nimport {AiFillGoogleCircle} from 'react-icons/ai';\n\nconst Login = ({handleChange}) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const alert = useContext(AlertContext);\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n    try {\n      dispatch(signInWithGoogle({data: {result, token}}, history));\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const googleFailure = () => {\n    alert.successAlert('Google sign in was unsuccessful. Try again later');\n    console.log('Google sign in was unsuccessful. Try again later');\n  };\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.googleCont}>\n        <GoogleLogin\n          clientId='504256198169-11igqfgkufvc1703me1hoefg72mbnbf4.apps.googleusercontent.com'\n          render={renderProps => (\n            <button onClick={renderProps.onClick} disabled={renderProps.disabled} className={styles.googleBtn}>\n              <AiFillGoogleCircle/>Log in with Google<AiFillGoogleCircle/>\n            </button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={googleSuccess}\n          onFailure={googleFailure}\n          cookiePolicy='single_host_origin'\n        />\n      </div>\n      <div className={styles.or}>\n        <fieldset>\n          <legend >or</legend>\n        </fieldset>\n      </div>\n      <label htmlFor=\"email\">E-mail</label>\n      <input\n        id='email'\n        name='email'\n        type=\"text\"\n        placeholder='E-mail'\n        onChange={handleChange}\n      />\n      <label htmlFor=\"password\">Password</label>\n      <input\n        id='password'\n        name='password'\n        type=\"password\"\n        placeholder='Password'\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  handleChange: PropTypes.func,\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}