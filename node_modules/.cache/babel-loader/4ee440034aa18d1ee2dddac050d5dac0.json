{"ast":null,"code":"import { initialState } from './initialState';\nimport axios from 'axios';\nimport { API_URL } from '../config';\n/* selectors */\n\nexport const getAllCart = () => JSON.parse(localStorage.getItem('cart'));\nexport const cartTotalQuantity = () => {\n  var _JSON$parse, _JSON$parse$data;\n\n  return (_JSON$parse = JSON.parse(localStorage.getItem('cart'))) === null || _JSON$parse === void 0 ? void 0 : (_JSON$parse$data = _JSON$parse.data) === null || _JSON$parse$data === void 0 ? void 0 : _JSON$parse$data.map(product => product.cartQuantiy);\n};\n/* action name creator */\n\nconst reducerName = 'cart';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n/* action types */\n\n\nconst HANDLE_ADD_QUANTITY = createActionName('HANDLE_ADD_QUANTITY');\nconst HANDLE_MINUS_QUANTITY = createActionName('HANDLE_MINUS_QUANTITY');\nconst HANDLE_CLEAR_ITEM = createActionName('HANDLE_CLEAR_ITEM');\n/* action creators */\n\nexport const handleAddQuantity = payload => ({\n  payload,\n  type: HANDLE_ADD_QUANTITY\n});\nexport const handleMinusQuantity = payload => ({\n  payload,\n  type: HANDLE_MINUS_QUANTITY\n});\nexport const handleClear = payload => ({\n  payload,\n  type: HANDLE_CLEAR_ITEM\n});\n/* thunk creators */\n\nexport const sendOrder = order => {\n  return async dispatch => {\n    try {\n      const res = await axios.post(`${API_URL}/cart`, order);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n/* reducer */\n\nexport const reducer = (statePart = initialState, action = {}) => {\n  switch (action.type) {\n    case HANDLE_ADD_QUANTITY:\n      {\n        const cartItems = JSON.parse(localStorage.getItem('cart')).data;\n        const products = JSON.parse(localStorage.getItem('products')).data;\n        const updatedItems = cartItems.map(product => {\n          if (product._id === action.payload) {\n            product.cartQuantiy = product.cartQuantiy + 1;\n            const newItems = products.map(item => {\n              if (item._id === product._id) {\n                item.cartQuantiy = item.cartQuantiy + 1;\n                return item;\n              } else {\n                return item;\n              }\n            });\n            localStorage.setItem('products', JSON.stringify({\n              data: newItems\n            }));\n            return product;\n          } else {\n            return product;\n          }\n        });\n        localStorage.setItem('cart', JSON.stringify({\n          data: updatedItems\n        }));\n        return statePart;\n      }\n\n    case HANDLE_MINUS_QUANTITY:\n      {\n        const cartItems = JSON.parse(localStorage.getItem('cart')).data;\n        const products = JSON.parse(localStorage.getItem('products')).data;\n        const updatedItems = cartItems.map(product => {\n          if (product._id === action.payload) {\n            if (product.cartQuantiy > 0) {\n              product.cartQuantiy = product.cartQuantiy - 1;\n              const newItems = products.map(item => {\n                if (item._id === product._id) {\n                  item.cartQuantiy = item.cartQuantiy - 1;\n                  return item;\n                } else {\n                  return item;\n                }\n              });\n              localStorage.setItem('products', JSON.stringify({\n                data: newItems\n              }));\n            }\n\n            return product;\n          } else {\n            return product;\n          }\n        });\n        localStorage.setItem('cart', JSON.stringify({\n          data: updatedItems\n        }));\n        return statePart;\n      }\n\n    case HANDLE_CLEAR_ITEM:\n      {\n        const cartItems = JSON.parse(localStorage.getItem('cart')).data;\n        const products = JSON.parse(localStorage.getItem('products')).data;\n        const itemToRemove = cartItems.findIndex(product => product._id === action.payload);\n        cartItems.splice(itemToRemove, 1);\n        localStorage.setItem('cart', JSON.stringify({\n          data: cartItems\n        }));\n        const newItems = products.map(item => {\n          if (item._id === action.payload) {\n            item.cartQuantiy = 0;\n            return item;\n          } else {\n            return item;\n          }\n        });\n        localStorage.setItem('products', JSON.stringify({\n          data: newItems\n        }));\n        return statePart;\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/home/hiorii/Desktop/arduRob/client/src/redux/cartRedux.js"],"names":["initialState","axios","API_URL","getAllCart","JSON","parse","localStorage","getItem","cartTotalQuantity","data","map","product","cartQuantiy","reducerName","createActionName","name","HANDLE_ADD_QUANTITY","HANDLE_MINUS_QUANTITY","HANDLE_CLEAR_ITEM","handleAddQuantity","payload","type","handleMinusQuantity","handleClear","sendOrder","order","dispatch","res","post","err","console","log","reducer","statePart","action","cartItems","products","updatedItems","_id","newItems","item","setItem","stringify","itemToRemove","findIndex","splice"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,gBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,MAAMC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAzB;AACP,OAAO,MAAMC,iBAAiB,GAAG;AAAA;;AAAA,wBAAMJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAN,oEAAM,YAA0CE,IAAhD,qDAAM,iBAAgDC,GAAhD,CAAoDC,OAAO,IAAIA,OAAO,CAACC,WAAvE,CAAN;AAAA,CAA1B;AAEP;;AACA,MAAMC,WAAW,GAAG,MAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,IAAK,OAAMF,WAAY,IAAGE,IAAK,EAA5D;AAEA;;;AACA,MAAMC,mBAAmB,GAAGF,gBAAgB,CAAC,qBAAD,CAA5C;AACA,MAAMG,qBAAqB,GAAGH,gBAAgB,CAAC,uBAAD,CAA9C;AACA,MAAMI,iBAAiB,GAAGJ,gBAAgB,CAAC,mBAAD,CAA1C;AAEA;;AACA,OAAO,MAAMK,iBAAiB,GAAGC,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEL;AAAjB,CAAL,CAAjC;AACP,OAAO,MAAMM,mBAAmB,GAAGF,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEJ;AAAjB,CAAL,CAAnC;AACP,OAAO,MAAMM,WAAW,GAAGH,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEH;AAAjB,CAAL,CAA3B;AAEP;;AACA,OAAO,MAAMM,SAAS,GAAIC,KAAD,IAAW;AAClC,SAAO,MAAMC,QAAN,IAAmB;AACxB,QAAI;AACF,YAAMC,GAAG,GAAG,MAAM1B,KAAK,CAAC2B,IAAN,CAAY,GAAE1B,OAAQ,OAAtB,EAA8BuB,KAA9B,CAAlB;AAED,KAHD,CAGE,OAAOI,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAPD;AAQD,CATM;AAYP;;AACA,OAAO,MAAMG,OAAO,GAAG,CAACC,SAAS,GAAGjC,YAAb,EAA2BkC,MAAM,GAAG,EAApC,KAA2C;AAChE,UAAQA,MAAM,CAACb,IAAf;AACE,SAAKL,mBAAL;AAA0B;AACxB,cAAMmB,SAAS,GAAG/B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCE,IAA3D;AACA,cAAM2B,QAAQ,GAAGhC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CE,IAA9D;AACA,cAAM4B,YAAY,GAAGF,SAAS,CAACzB,GAAV,CAAcC,OAAO,IAAI;AAC5C,cAAGA,OAAO,CAAC2B,GAAR,KAAgBJ,MAAM,CAACd,OAA1B,EAAmC;AACjCT,YAAAA,OAAO,CAACC,WAAR,GAAsBD,OAAO,CAACC,WAAR,GAAsB,CAA5C;AACA,kBAAM2B,QAAQ,GAAGH,QAAQ,CAAC1B,GAAT,CAAa8B,IAAI,IAAI;AACpC,kBAAGA,IAAI,CAACF,GAAL,KAAa3B,OAAO,CAAC2B,GAAxB,EAA6B;AAC3BE,gBAAAA,IAAI,CAAC5B,WAAL,GAAmB4B,IAAI,CAAC5B,WAAL,GAAmB,CAAtC;AACA,uBAAO4B,IAAP;AACD,eAHD,MAGO;AACL,uBAAOA,IAAP;AACD;AACF,aAPgB,CAAjB;AAQAlC,YAAAA,YAAY,CAACmC,OAAb,CAAqB,UAArB,EAAiCrC,IAAI,CAACsC,SAAL,CAAe;AAACjC,cAAAA,IAAI,EAAE8B;AAAP,aAAf,CAAjC;AACA,mBAAO5B,OAAP;AACD,WAZD,MAYO;AACL,mBAAOA,OAAP;AACD;AACF,SAhBoB,CAArB;AAiBAL,QAAAA,YAAY,CAACmC,OAAb,CAAqB,MAArB,EAA6BrC,IAAI,CAACsC,SAAL,CAAe;AAACjC,UAAAA,IAAI,EAAE4B;AAAP,SAAf,CAA7B;AACA,eAAOJ,SAAP;AACD;;AACD,SAAKhB,qBAAL;AAA4B;AAC1B,cAAMkB,SAAS,GAAG/B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCE,IAA3D;AACA,cAAM2B,QAAQ,GAAGhC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CE,IAA9D;AACA,cAAM4B,YAAY,GAAGF,SAAS,CAACzB,GAAV,CAAcC,OAAO,IAAI;AAC5C,cAAGA,OAAO,CAAC2B,GAAR,KAAgBJ,MAAM,CAACd,OAA1B,EAAmC;AACjC,gBAAGT,OAAO,CAACC,WAAR,GAAsB,CAAzB,EAA4B;AAC1BD,cAAAA,OAAO,CAACC,WAAR,GAAsBD,OAAO,CAACC,WAAR,GAAsB,CAA5C;AACA,oBAAM2B,QAAQ,GAAGH,QAAQ,CAAC1B,GAAT,CAAa8B,IAAI,IAAI;AACpC,oBAAGA,IAAI,CAACF,GAAL,KAAa3B,OAAO,CAAC2B,GAAxB,EAA6B;AAC3BE,kBAAAA,IAAI,CAAC5B,WAAL,GAAmB4B,IAAI,CAAC5B,WAAL,GAAmB,CAAtC;AACA,yBAAO4B,IAAP;AACD,iBAHD,MAGO;AACL,yBAAOA,IAAP;AACD;AACF,eAPgB,CAAjB;AAQAlC,cAAAA,YAAY,CAACmC,OAAb,CAAqB,UAArB,EAAiCrC,IAAI,CAACsC,SAAL,CAAe;AAACjC,gBAAAA,IAAI,EAAE8B;AAAP,eAAf,CAAjC;AACD;;AACD,mBAAO5B,OAAP;AACD,WAdD,MAcO;AACL,mBAAOA,OAAP;AACD;AACF,SAlBoB,CAArB;AAmBAL,QAAAA,YAAY,CAACmC,OAAb,CAAqB,MAArB,EAA6BrC,IAAI,CAACsC,SAAL,CAAe;AAACjC,UAAAA,IAAI,EAAE4B;AAAP,SAAf,CAA7B;AACA,eAAOJ,SAAP;AACD;;AACD,SAAKf,iBAAL;AAAwB;AACtB,cAAMiB,SAAS,GAAG/B,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,EAAyCE,IAA3D;AACA,cAAM2B,QAAQ,GAAGhC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,EAA6CE,IAA9D;AACA,cAAMkC,YAAY,GAAGR,SAAS,CAACS,SAAV,CAAoBjC,OAAO,IAC9CA,OAAO,CAAC2B,GAAR,KAAgBJ,MAAM,CAACd,OADJ,CAArB;AAGAe,QAAAA,SAAS,CAACU,MAAV,CAAiBF,YAAjB,EAA8B,CAA9B;AACArC,QAAAA,YAAY,CAACmC,OAAb,CAAqB,MAArB,EAA6BrC,IAAI,CAACsC,SAAL,CAAe;AAACjC,UAAAA,IAAI,EAAE0B;AAAP,SAAf,CAA7B;AACA,cAAMI,QAAQ,GAAGH,QAAQ,CAAC1B,GAAT,CAAa8B,IAAI,IAAI;AACpC,cAAGA,IAAI,CAACF,GAAL,KAAaJ,MAAM,CAACd,OAAvB,EAAgC;AAC9BoB,YAAAA,IAAI,CAAC5B,WAAL,GAAmB,CAAnB;AACA,mBAAO4B,IAAP;AACD,WAHD,MAGO;AACL,mBAAOA,IAAP;AACD;AACF,SAPgB,CAAjB;AAQAlC,QAAAA,YAAY,CAACmC,OAAb,CAAqB,UAArB,EAAiCrC,IAAI,CAACsC,SAAL,CAAe;AAACjC,UAAAA,IAAI,EAAE8B;AAAP,SAAf,CAAjC;AACA,eAAON,SAAP;AACD;;AACD;AACE,aAAOA,SAAP;AArEJ;AAuED,CAxEM","sourcesContent":["import {initialState} from './initialState';\nimport axios from 'axios';\nimport {API_URL} from '../config';\n\n/* selectors */\nexport const getAllCart = () => JSON.parse(localStorage.getItem('cart'));\nexport const cartTotalQuantity = () => JSON.parse(localStorage.getItem('cart'))?.data?.map(product => product.cartQuantiy);\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst HANDLE_ADD_QUANTITY = createActionName('HANDLE_ADD_QUANTITY');\nconst HANDLE_MINUS_QUANTITY = createActionName('HANDLE_MINUS_QUANTITY');\nconst HANDLE_CLEAR_ITEM = createActionName('HANDLE_CLEAR_ITEM');\n\n/* action creators */\nexport const handleAddQuantity = payload => ({ payload, type: HANDLE_ADD_QUANTITY });\nexport const handleMinusQuantity = payload => ({ payload, type: HANDLE_MINUS_QUANTITY });\nexport const handleClear = payload => ({ payload, type: HANDLE_CLEAR_ITEM });\n\n/* thunk creators */\nexport const sendOrder = (order) => {\n  return async(dispatch) => {\n    try {\n      const res = await axios.post(`${API_URL}/cart`, order);\n            \n    } catch (err) {\n      console.log(err);\n    }\n  };\n};\n\n\n/* reducer */\nexport const reducer = (statePart = initialState, action = {}) => {\n  switch (action.type) {\n    case HANDLE_ADD_QUANTITY: {\n      const cartItems = JSON.parse(localStorage.getItem('cart')).data;\n      const products = JSON.parse(localStorage.getItem('products')).data;\n      const updatedItems = cartItems.map(product => {\n        if(product._id === action.payload) {\n          product.cartQuantiy = product.cartQuantiy + 1;\n          const newItems = products.map(item => {\n            if(item._id === product._id) {\n              item.cartQuantiy = item.cartQuantiy + 1;\n              return item;\n            } else {\n              return item;\n            }\n          });\n          localStorage.setItem('products', JSON.stringify({data: newItems}));\n          return product;\n        } else {\n          return product;\n        }\n      });\n      localStorage.setItem('cart', JSON.stringify({data: updatedItems}));\n      return statePart;\n    }\n    case HANDLE_MINUS_QUANTITY: {\n      const cartItems = JSON.parse(localStorage.getItem('cart')).data;\n      const products = JSON.parse(localStorage.getItem('products')).data;\n      const updatedItems = cartItems.map(product => {\n        if(product._id === action.payload) {\n          if(product.cartQuantiy > 0) {\n            product.cartQuantiy = product.cartQuantiy - 1;\n            const newItems = products.map(item => {\n              if(item._id === product._id) {\n                item.cartQuantiy = item.cartQuantiy - 1;\n                return item;\n              } else {\n                return item;\n              }\n            });\n            localStorage.setItem('products', JSON.stringify({data: newItems}));\n          }\n          return product;\n        } else {\n          return product;\n        }\n      });\n      localStorage.setItem('cart', JSON.stringify({data: updatedItems}));\n      return statePart;\n    }\n    case HANDLE_CLEAR_ITEM: {\n      const cartItems = JSON.parse(localStorage.getItem('cart')).data;\n      const products = JSON.parse(localStorage.getItem('products')).data;\n      const itemToRemove = cartItems.findIndex(product =>\n        product._id === action.payload\n      );\n      cartItems.splice(itemToRemove,1);\n      localStorage.setItem('cart', JSON.stringify({data: cartItems}));\n      const newItems = products.map(item => {\n        if(item._id === action.payload) {\n          item.cartQuantiy = 0;\n          return item;\n        } else {\n          return item;\n        }\n      });\n      localStorage.setItem('products', JSON.stringify({data: newItems}));\n      return statePart;\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}