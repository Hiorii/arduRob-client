{"ast":null,"code":"var _jsxFileName = \"/home/hiorii/Desktop/arduRob/client/src/components/views/Checkout/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { authUser, getCurrentUser, signInWithGoogle } from '../../../../redux/userRedux';\nimport styles from './Login.module.scss';\nimport { GoogleLogin } from 'react-google-login';\nimport { AiFillGoogleCircle } from 'react-icons/ai';\nimport Register from '../Register/Register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = ({\n  handleChange\n}) => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const googleSuccess = async res => {\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch(signInWithGoogle({\n        data: {\n          result,\n          token\n        }\n      })); // dispatch(authUser({data: {result, token}}));\n      // history.push('/');\n      // window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log('Google sign in was unsuccessful. Try again later');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.googleCont,\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: \"504256198169-11igqfgkufvc1703me1hoefg72mbnbf4.apps.googleusercontent.com\",\n        render: renderProps => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: renderProps.onClick,\n          disabled: renderProps.disabled,\n          className: styles.googleBtn,\n          children: [/*#__PURE__*/_jsxDEV(AiFillGoogleCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), \"Log in with Google\", /*#__PURE__*/_jsxDEV(AiFillGoogleCircle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 54\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this),\n        buttonText: \"Login\",\n        onSuccess: googleSuccess,\n        onFailure: googleFailure,\n        cookiePolicy: \"single_host_origin\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.or,\n      children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n        children: /*#__PURE__*/_jsxDEV(\"legend\", {\n          children: \"or\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"E-mail\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"text\",\n      placeholder: \"E-mail\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"password\",\n      name: \"password\",\n      type: \"password\",\n      placeholder: \"Password\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"ztFVC0/0rI8de3REyGzb7ruuLNE=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = Login;\nLogin.propTypes = {\n  handleChange: PropTypes.func\n};\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/hiorii/Desktop/arduRob/client/src/components/views/Checkout/Login/Login.js"],"names":["React","PropTypes","useDispatch","useHistory","authUser","getCurrentUser","signInWithGoogle","styles","GoogleLogin","AiFillGoogleCircle","Register","Login","handleChange","history","dispatch","googleSuccess","res","result","profileObj","token","tokenId","data","err","console","log","googleFailure","root","googleCont","renderProps","onClick","disabled","googleBtn","or","propTypes","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {useDispatch} from 'react-redux';\nimport {useHistory} from 'react-router-dom';\nimport {authUser, getCurrentUser, signInWithGoogle} from '../../../../redux/userRedux';\nimport styles from './Login.module.scss';\nimport {GoogleLogin} from 'react-google-login';\nimport {AiFillGoogleCircle} from 'react-icons/ai';\nimport Register from '../Register/Register';\n\nconst Login = ({handleChange}) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const googleSuccess = async (res) => {\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n    try {\n      dispatch(signInWithGoogle({data: {result, token}}));\n      // dispatch(authUser({data: {result, token}}));\n      // history.push('/');\n      // window.location.reload();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const googleFailure = () => {\n    console.log('Google sign in was unsuccessful. Try again later');\n  };\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.googleCont}>\n        <GoogleLogin\n          clientId='504256198169-11igqfgkufvc1703me1hoefg72mbnbf4.apps.googleusercontent.com'\n          render={renderProps => (\n            <button onClick={renderProps.onClick} disabled={renderProps.disabled} className={styles.googleBtn}>\n              <AiFillGoogleCircle/>Log in with Google<AiFillGoogleCircle/>\n            </button>\n          )}\n          buttonText=\"Login\"\n          onSuccess={googleSuccess}\n          onFailure={googleFailure}\n          cookiePolicy='single_host_origin'\n        />\n      </div>\n      <div className={styles.or}>\n        <fieldset>\n          <legend >or</legend>\n        </fieldset>\n      </div>\n      <label htmlFor=\"email\">E-mail</label>\n      <input\n        id='email'\n        name='email'\n        type=\"text\"\n        placeholder='E-mail'\n        onChange={handleChange}\n      />\n      <label htmlFor=\"password\">Password</label>\n      <input\n        id='password'\n        name='password'\n        type=\"password\"\n        placeholder='Password'\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\n\nLogin.propTypes = {\n  handleChange: PropTypes.func,\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}