{"ast":null,"code":"import { initialState } from './initialState';\n/* selectors */\n//export const getAllCart = () => JSON.parse(localStorage.getItem('cart'));\n\n/* action name creator */\n\nconst reducerName = 'cart';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n/* action types */\n\n\nconst HANDLE_ADD_QUANTITY = createActionName('HANDLE_ADD_QUANTITY');\n/* action creators */\n\nexport const handleAddQuantity = payload => ({\n  payload,\n  type: HANDLE_ADD_QUANTITY\n});\n/* reducer */\n\nexport const reducer = (statePart = initialState, action = {}) => {\n  switch (action.type) {\n    case HANDLE_ADD_QUANTITY:\n      {\n        const cartItems = JSON.parse(localStorage.getItem('cart'));\n        const updatedItems = cartItems.map(product => {\n          if (product._id === action.payload) {\n            product.cartQuantiy = product.cartQuantiy + 1;\n            console.log(product.cartQuantiy);\n            return product;\n          } else {\n            return product;\n          }\n        }); //console.log(updatedItems);\n\n        localStorage.setItem('cart', JSON.stringify(updatedItems));\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/home/hiorii/Desktop/arduRob/client/src/redux/cartRedux.js"],"names":["initialState","reducerName","createActionName","name","HANDLE_ADD_QUANTITY","handleAddQuantity","payload","type","reducer","statePart","action","cartItems","JSON","parse","localStorage","getItem","updatedItems","map","product","_id","cartQuantiy","console","log","setItem","stringify"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,gBAA3B;AAEA;AACA;;AAEA;;AACA,MAAMC,WAAW,GAAG,MAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,IAAK,OAAMF,WAAY,IAAGE,IAAK,EAA5D;AAEA;;;AACA,MAAMC,mBAAmB,GAAGF,gBAAgB,CAAC,qBAAD,CAA5C;AAEA;;AACA,OAAO,MAAMG,iBAAiB,GAAGC,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEH;AAAjB,CAAL,CAAjC;AAEP;;AACA,OAAO,MAAMI,OAAO,GAAG,CAACC,SAAS,GAAGT,YAAb,EAA2BU,MAAM,GAAG,EAApC,KAA2C;AAChE,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKH,mBAAL;AAA0B;AACxB,cAAMO,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAlB;AACA,cAAMC,YAAY,GAAGL,SAAS,CAACM,GAAV,CAAcC,OAAO,IAAI;AAC5C,cAAGA,OAAO,CAACC,GAAR,KAAgBT,MAAM,CAACJ,OAA1B,EAAmC;AACjCY,YAAAA,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACE,WAAR,GAAsB,CAA5C;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAYJ,OAAO,CAACE,WAApB;AACA,mBAAOF,OAAP;AACD,WAJD,MAIO;AACL,mBAAOA,OAAP;AACD;AACF,SARoB,CAArB,CAFwB,CAWxB;;AACAJ,QAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACY,SAAL,CAAeR,YAAf,CAA7B;AACD;;AACD;AACE,aAAOP,SAAP;AAhBJ;AAkBD,CAnBM","sourcesContent":["import {initialState} from './initialState';\n\n/* selectors */\n//export const getAllCart = () => JSON.parse(localStorage.getItem('cart'));\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst HANDLE_ADD_QUANTITY = createActionName('HANDLE_ADD_QUANTITY');\n\n/* action creators */\nexport const handleAddQuantity = payload => ({ payload, type: HANDLE_ADD_QUANTITY });\n\n/* reducer */\nexport const reducer = (statePart = initialState, action = {}) => {\n  switch (action.type) {\n    case HANDLE_ADD_QUANTITY: {\n      const cartItems = JSON.parse(localStorage.getItem('cart'));\n      const updatedItems = cartItems.map(product => {\n        if(product._id === action.payload) {\n          product.cartQuantiy = product.cartQuantiy + 1;\n          console.log(product.cartQuantiy);\n          return product;\n        } else {\n          return product;\n        }\n      });\n      //console.log(updatedItems);\n      localStorage.setItem('cart', JSON.stringify(updatedItems));\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}