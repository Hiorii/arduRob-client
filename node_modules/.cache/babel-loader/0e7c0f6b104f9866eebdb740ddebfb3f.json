{"ast":null,"code":"import { initialState } from './initialState';\nimport axios from 'axios';\nimport { API_URL } from '../config';\n/* selectors */\n\nexport const getAllProducts = ({\n  products\n}) => products;\n/* action name creator */\n\nconst reducerName = 'products';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n/* action types */\n\n\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\n/* action creators */\n\nexport const fetchStarted = payload => ({\n  payload,\n  type: FETCH_START\n});\nexport const fetchSuccess = payload => ({\n  payload,\n  type: FETCH_SUCCESS\n});\nexport const fetchError = payload => ({\n  payload,\n  type: FETCH_ERROR\n});\nexport const addToCart = payload => ({\n  payload,\n  type: ADD_TO_CART\n});\n/* thunk creators */\n\nexport const fetchProducts = products => {\n  return async dispatch => {\n    dispatch(fetchStarted());\n\n    try {\n      const res = await axios.get(`${API_URL}/products`);\n      dispatch(fetchSuccess(res.data));\n    } catch (err) {\n      dispatch(fetchError(err.message || true));\n    }\n  };\n};\n/* reducer */\n\nexport const reducer = (statePart = initialState, action = {}) => {\n  switch (action.type) {\n    case FETCH_START:\n      {\n        return { ...statePart,\n          loading: {\n            active: true,\n            error: false\n          }\n        };\n      }\n\n    case FETCH_SUCCESS:\n      {\n        action.payload.forEach(product => product.cartQuantiy = 0);\n        return { ...statePart,\n          loading: {\n            active: false,\n            error: false\n          },\n          data: action.payload\n        };\n      }\n\n    case FETCH_ERROR:\n      {\n        return { ...statePart,\n          loading: {\n            active: false,\n            error: action.payload\n          }\n        };\n      }\n\n    case ADD_TO_CART:\n      {\n        const newStatePart = statePart.data.map(product => {\n          if (product._id === action.payload._id) {\n            product.cartQuantiy = product.cartQuantiy + 1;\n            return product;\n          } else {\n            return product;\n          }\n        });\n        const updatedItems = newStatePart.filter(item => item.cartQuantiy > 0);\n        localStorage.setItem('cart', JSON.stringify({ ...statePart,\n          updatedItems\n        }));\n        return { ...statePart,\n          data: newStatePart\n        };\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/home/hiorii/Desktop/arduRob/client/src/redux/productRedux.js"],"names":["initialState","axios","API_URL","getAllProducts","products","reducerName","createActionName","name","FETCH_START","FETCH_SUCCESS","FETCH_ERROR","ADD_TO_CART","fetchStarted","payload","type","fetchSuccess","fetchError","addToCart","fetchProducts","dispatch","res","get","data","err","message","reducer","statePart","action","loading","active","error","forEach","product","cartQuantiy","newStatePart","map","_id","updatedItems","filter","item","localStorage","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import {initialState} from './initialState';\nimport axios from 'axios';\nimport {API_URL} from '../config';\n\n/* selectors */\nexport const getAllProducts = ({products}) => products;\n\n/* action name creator */\nconst reducerName = 'products';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\nconst FETCH_SUCCESS = createActionName('FETCH_SUCCESS');\nconst FETCH_ERROR = createActionName('FETCH_ERROR');\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\nexport const fetchSuccess = payload => ({ payload, type: FETCH_SUCCESS });\nexport const fetchError = payload => ({ payload, type: FETCH_ERROR });\nexport const addToCart = payload => ({ payload, type: ADD_TO_CART });\n\n/* thunk creators */\nexport const fetchProducts = (products) => {\n  return async (dispatch) => {\n    dispatch(fetchStarted());\n    try {\n      const res = await axios.get(`${API_URL}/products`);\n      dispatch(fetchSuccess(res.data));\n    } catch (err) {\n      dispatch(fetchError(err.message || true));\n    }\n  };\n};\n\n/* reducer */\nexport const reducer = (statePart = initialState, action = {}) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    case FETCH_SUCCESS: {\n      action.payload.forEach(product => product.cartQuantiy = 0);\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: false,\n        },\n        data: action.payload,\n      };\n    }\n    case FETCH_ERROR: {\n      return {\n        ...statePart,\n        loading: {\n          active: false,\n          error: action.payload,\n        },\n      };\n    }\n    case ADD_TO_CART: {\n      const newStatePart = statePart.data.map(product => {\n        if (product._id === action.payload._id) {\n          product.cartQuantiy = product.cartQuantiy + 1;\n          return product;\n        } else {\n          return product;\n        }\n      });\n      const updatedItems = newStatePart.filter(item=>item.cartQuantiy > 0);\n      localStorage.setItem('cart', JSON.stringify({...statePart,\n        updatedItems}));\n      return {\n        ...statePart,\n        data: newStatePart,\n      };\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}