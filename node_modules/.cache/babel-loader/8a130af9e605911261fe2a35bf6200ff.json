{"ast":null,"code":"import { initialState } from './initialState';\nimport axios from 'axios';\nimport { API_URL } from '../config';\n/* selectors */\n\nexport const getAllCart = ({\n  cart\n}) => cart;\n/* action name creator */\n\nconst reducerName = 'cart';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n/* action types */\n\n\nconst FETCH_START = createActionName('FETCH_START');\n/* action creators */\n\nexport const fetchStarted = payload => ({\n  payload,\n  type: FETCH_START\n});\n/* reducer */\n\nexport const reducer = (statePart = initialState, action = {}) => {\n  switch (action.type) {\n    case FETCH_START:\n      {\n        return { ...statePart,\n          loading: {\n            active: true,\n            error: false\n          }\n        };\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/home/hiorii/Desktop/arduRob/client/src/redux/cartRedux.js"],"names":["initialState","axios","API_URL","getAllCart","cart","reducerName","createActionName","name","FETCH_START","fetchStarted","payload","type","reducer","statePart","action","loading","active","error"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,gBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,WAAtB;AAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAYA,IAA/B;AAEP;;AACA,MAAMC,WAAW,GAAG,MAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,IAAK,OAAMF,WAAY,IAAGE,IAAK,EAA5D;AAEA;;;AACA,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,aAAD,CAApC;AAEA;;AACA,OAAO,MAAMG,YAAY,GAAGC,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEH;AAAjB,CAAL,CAA5B;AAEP;;AACA,OAAO,MAAMI,OAAO,GAAG,CAACC,SAAS,GAAGb,YAAb,EAA2Bc,MAAM,GAAG,EAApC,KAA2C;AAChE,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKH,WAAL;AAAkB;AAChB,eAAO,EACL,GAAGK,SADE;AAELE,UAAAA,OAAO,EAAE;AACPC,YAAAA,MAAM,EAAE,IADD;AAEPC,YAAAA,KAAK,EAAE;AAFA;AAFJ,SAAP;AAOD;;AACD;AACE,aAAOJ,SAAP;AAXJ;AAaD,CAdM","sourcesContent":["import {initialState} from './initialState';\nimport axios from 'axios';\nimport {API_URL} from '../config';\n\n/* selectors */\nexport const getAllCart = ({cart}) => cart;\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst FETCH_START = createActionName('FETCH_START');\n\n/* action creators */\nexport const fetchStarted = payload => ({ payload, type: FETCH_START });\n\n/* reducer */\nexport const reducer = (statePart = initialState, action = {}) => {\n  switch (action.type) {\n    case FETCH_START: {\n      return {\n        ...statePart,\n        loading: {\n          active: true,\n          error: false,\n        },\n      };\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}