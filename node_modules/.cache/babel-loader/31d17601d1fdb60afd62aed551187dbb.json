{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport { initialState } from './initialState';\nimport { reducer as productsReducer } from './productRedux';\nimport { reducer as categoryReducer } from './categoryRedux';\nimport { reducer as cartReducer } from './cartRedux'; // define reducers\n\nconst reducers = {\n  products: productsReducer,\n  category: categoryReducer,\n  cart: cartReducer\n}; // add blank reducers for initial state properties without reducers\n\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\nconst combinedReducers = combineReducers(reducers); // create store\n\nexport const store = createStore(combinedReducers, initialState, composeWithDevTools(applyMiddleware(thunk)));","map":{"version":3,"sources":["/home/hiorii/Desktop/arduRob/client/src/redux/store.js"],"names":["combineReducers","createStore","applyMiddleware","composeWithDevTools","thunk","initialState","reducer","productsReducer","categoryReducer","cartReducer","reducers","products","category","cart","Object","keys","forEach","item","statePart","combinedReducers","store"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,WAAzB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AAEA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,OAAO,IAAIC,eAAnB,QAAyC,gBAAzC;AACA,SAAQD,OAAO,IAAIE,eAAnB,QAAyC,iBAAzC;AACA,SAAQF,OAAO,IAAIG,WAAnB,QAAqC,aAArC,C,CAEA;;AACA,MAAMC,QAAQ,GAAG;AACfC,EAAAA,QAAQ,EAAEJ,eADK;AAEfK,EAAAA,QAAQ,EAAEJ,eAFK;AAGfK,EAAAA,IAAI,EAAEJ;AAHS,CAAjB,C,CAMA;;AACAK,MAAM,CAACC,IAAP,CAAYV,YAAZ,EAA0BW,OAA1B,CAAkCC,IAAI,IAAI;AACxC,MAAI,OAAOP,QAAQ,CAACO,IAAD,CAAf,IAAyB,WAA7B,EAA0C;AACxCP,IAAAA,QAAQ,CAACO,IAAD,CAAR,GAAiB,CAACC,SAAS,GAAG,IAAb,KAAsBA,SAAvC;AACD;AACF,CAJD;AAMA,MAAMC,gBAAgB,GAAGnB,eAAe,CAACU,QAAD,CAAxC,C,CAEA;;AACA,OAAO,MAAMU,KAAK,GAAGnB,WAAW,CAC9BkB,gBAD8B,EAE9Bd,YAF8B,EAG9BF,mBAAmB,CACjBD,eAAe,CAACE,KAAD,CADE,CAHW,CAAzB","sourcesContent":["import {combineReducers, createStore, applyMiddleware} from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport {initialState} from './initialState';\nimport {reducer as productsReducer} from './productRedux';\nimport {reducer as categoryReducer} from './categoryRedux';\nimport {reducer as cartReducer} from './cartRedux';\n\n// define reducers\nconst reducers = {\n  products: productsReducer,\n  category: categoryReducer,\n  cart: cartReducer,\n};\n\n// add blank reducers for initial state properties without reducers\nObject.keys(initialState).forEach(item => {\n  if (typeof reducers[item] == 'undefined') {\n    reducers[item] = (statePart = null) => statePart;\n  }\n});\n\nconst combinedReducers = combineReducers(reducers);\n\n// create store\nexport const store = createStore(\n  combinedReducers,\n  initialState,\n  composeWithDevTools(\n    applyMiddleware(thunk)\n  )\n);\n"]},"metadata":{},"sourceType":"module"}