{"ast":null,"code":"import { initialState } from './initialState';\n/* selectors */\n\nexport const getAllCart = ({\n  cart\n}) => cart.products;\n/* action name creator */\n\nconst reducerName = 'cart';\n\nconst createActionName = name => `app/${reducerName}/${name}`;\n/* action types */\n\n\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\n/* action creators */\n\nexport const addToCart = payload => ({\n  payload,\n  type: ADD_TO_CART\n});\n/* reducer */\n\nexport const reducer = (statePart = initialState, action = {}) => {\n  switch (action.type) {\n    case ADD_TO_CART:\n      {\n        console.log(action.payload);\n        console.log(statePart.products);\n        const newStatePart = statePart.products.map(product => {\n          if (product._id === action.payload._id) {\n            product.cartQuantiy = product.cartQuantiy + 1;\n            return product;\n          } else {\n            return product;\n          }\n        });\n        return { ...statePart,\n          products: [...statePart.products, newStatePart]\n        };\n      }\n\n    default:\n      return statePart;\n  }\n};","map":{"version":3,"sources":["/home/hiorii/Desktop/arduRob/client/src/redux/cartRedux.js"],"names":["initialState","getAllCart","cart","products","reducerName","createActionName","name","ADD_TO_CART","addToCart","payload","type","reducer","statePart","action","console","log","newStatePart","map","product","_id","cartQuantiy"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,gBAA3B;AAEA;;AACA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAYA,IAAI,CAACC,QAApC;AAEP;;AACA,MAAMC,WAAW,GAAG,MAApB;;AACA,MAAMC,gBAAgB,GAAGC,IAAI,IAAK,OAAMF,WAAY,IAAGE,IAAK,EAA5D;AAEA;;;AACA,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,aAAD,CAApC;AAEA;;AACA,OAAO,MAAMG,SAAS,GAAGC,OAAO,KAAK;AAAEA,EAAAA,OAAF;AAAWC,EAAAA,IAAI,EAAEH;AAAjB,CAAL,CAAzB;AAEP;;AACA,OAAO,MAAMI,OAAO,GAAG,CAACC,SAAS,GAAGZ,YAAb,EAA2Ba,MAAM,GAAG,EAApC,KAA2C;AAChE,UAAQA,MAAM,CAACH,IAAf;AACE,SAAKH,WAAL;AAAkB;AAChBO,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACJ,OAAnB;AACAK,QAAAA,OAAO,CAACC,GAAR,CAAYH,SAAS,CAACT,QAAtB;AACA,cAAMa,YAAY,GAAGJ,SAAS,CAACT,QAAV,CAAmBc,GAAnB,CAAuBC,OAAO,IAAI;AACrD,cAAGA,OAAO,CAACC,GAAR,KAAgBN,MAAM,CAACJ,OAAP,CAAeU,GAAlC,EAAuC;AACrCD,YAAAA,OAAO,CAACE,WAAR,GAAsBF,OAAO,CAACE,WAAR,GAAsB,CAA5C;AACA,mBAAOF,OAAP;AACD,WAHD,MAGO;AACL,mBAAOA,OAAP;AACD;AACF,SAPoB,CAArB;AAQA,eAAO,EACL,GAAGN,SADE;AAELT,UAAAA,QAAQ,EAAE,CAAC,GAAGS,SAAS,CAACT,QAAd,EAAwBa,YAAxB;AAFL,SAAP;AAID;;AACD;AACE,aAAOJ,SAAP;AAlBJ;AAoBD,CArBM","sourcesContent":["import {initialState} from './initialState';\n\n/* selectors */\nexport const getAllCart = ({cart}) => cart.products;\n\n/* action name creator */\nconst reducerName = 'cart';\nconst createActionName = name => `app/${reducerName}/${name}`;\n\n/* action types */\nconst ADD_TO_CART = createActionName('ADD_TO_CART');\n\n/* action creators */\nexport const addToCart = payload => ({ payload, type: ADD_TO_CART });\n\n/* reducer */\nexport const reducer = (statePart = initialState, action = {}) => {\n  switch (action.type) {\n    case ADD_TO_CART: {\n      console.log(action.payload);\n      console.log(statePart.products);\n      const newStatePart = statePart.products.map(product => {\n        if(product._id === action.payload._id) {\n          product.cartQuantiy = product.cartQuantiy + 1;\n          return product;\n        } else {\n          return product;\n        }\n      });\n      return {\n        ...statePart,\n        products: [...statePart.products, newStatePart],\n      };\n    }\n    default:\n      return statePart;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}